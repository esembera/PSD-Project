openapi: 3.0.3
info:
  title: Constructor API
  description: API documentation for a constructor company
  version: 1.0.0
servers:
- url: http://localhost:8080/
paths:
  /services:
    get:
      summary: Get Constructor Services
      description: Retrieve a list of available constructor services.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstructorServices'
      x-swagger-router-controller: Default
  /services/{nameOfService}:
    get:
      summary: Get Service Details
      description: Retrieve the details of the requested constructor service.
      parameters:
      - name: nameOfService
        in: path
        description: Name of the constructor service
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDetails'
    post:
      summary: Request Service
      description: Request a constructor service and receive a confirmation ID.
      parameters:
      - name: nameOfService
        in: path
        description: Name of the constructor service
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
  /service_request/{id}:
    get:
      summary: Get a service request status update
      description: Get information about the status of your previously submitted service request
      parameters:
      - name: id
        in: path
        description: ID of the service request
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRequestStatus'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /confirmation/{id}:
    post:
      summary: Confirm Quotation
      description: Endpoint for confirming a quotation when update is needed
      parameters:
      - name: id
        in: path
        description: The ID of the quotation to confirm
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/confirmation_id_body'
        required: true
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    ServiceRequest:
      required:
      - budget
      - customer_email
      - customer_name
      - description
      - service_startDate
      type: object
      properties:
        customer_name:
          type: string
          description: The name of the customer
        customer_email:
          type: string
          description: The name of the customer
        description:
          type: string
          description: A brief description of the renovation work
        service_startDate:
          type: string
          description: The deadline for the renovation project
          format: date-time
        pictures:
          type: array
          description: Pictures representing the state of the house
          items:
            type: string
            format: binary
    ServiceDetails:
      type: object
      properties:
        serviceName:
          type: string
        cost:
          type: number
          format: float
        description:
          type: string
        durationOfWork:
          type: string
      example:
        cost: 0.8008282
        description: description
        durationOfWork: durationOfWork
        serviceName: serviceName
    ConstructorServices:
      type: array
      items:
        type: string
        enum:
        - Demolition
        - Excavation
        - Concrete work
        - Masonry
        - Carpentry
        - Roofing
        - Plumbing
        - Electrical work
        - HVAC installation
        - Painting
        - Flooring installation
        - Tile setting
        - Drywall installation
        - Insulation installation
        - Landscaping
        - Renovations
        - Remodeling
        - Foundation repair
        - Welding
        - Siding installation

    ServiceRequestStatus:
      type: object
      properties:
        status:
          type: string
          description: Status of a service request
          enum:
          - PENDING
          - REJECTED
          - TAKEN_IN_CHARGE
          - COMPLETED
          - WAITING_FOR_UPDATE
        details:
          type: string
          description: This field varies depending on the status. For example - quotation is sent with WAITING_FOR_UPDATE status.
      example:
        details: details
        status: PENDING
    Error:
      required:
      - errorMessage
      type: object
      properties:
        errorMessage:
          type: string
          description: The error message that describes the error.
    confirmation_id_body:
      type: object
      properties:
        decision:
          type: string
          description: The confirmation message for the quotation
          enum:
          - "YES"
          - "NO"
    inline_response_200:
      type: object
      properties:
        requestId:
          type: integer
          format: int64
      example:
        requestId: 0